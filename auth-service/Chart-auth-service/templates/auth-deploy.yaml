apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment_name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: auth
    spec:
      initContainers:
      - name: check-db-ready
        image: postgres:17
        command: ['sh', '-c', 
          'until pg_isready -h postgres-service -p 5432; 
          do echo waiting for database; sleep 2; done;']
      - name: run-migrations
        image: flyway/flyway:9.21
        command: ["flyway"]
        args:
          - "-url=jdbc:postgresql://postgres-service:5432/golangdb"
          - "-user=user"
          - "-password=${FLYWAY_PASSWORD}"
          - "-connectRetries=10"
          - "migrate"
        env:
        - name: FLYWAY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: postgres-password
        volumeMounts:
        - name: migrations-volume
          mountPath: /flyway/sql
      containers:
      - name: auth-container
        image: {{ .Values.container.image }}
        imagePullPolicy: IfNotPresent
        env:
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                name: cred-postgres
                key: cred-postgres
          - name: JWT_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: secret-key
                key: secret-key
          - name: PORT
            value: 8080
        securityContext:
          runAsUser: 0
        resources:
          requests:
            cpu: 1000m
            memory: 6000Mi
          limits:
            cpu: 1600m
            memory: 7000Mi
      volumes:
      - name: migrations-volume
        configMap:
          name: db-migrations